{"ast":null,"code":"export var _hasMinLength = function _hasMinLength(value, minLength) {\n  return String(value).length >= minLength ? undefined : \"Text should be at least \".concat(minLength, \" characters long\");\n};\nexport var _hasMaxLength = function _hasMaxLength(value, maxLength) {\n  return String(value).length <= maxLength ? undefined : \"Text should be at most \".concat(maxLength, \" characters long\");\n};\nexport var _hasLength = function _hasLength(value, length) {\n  return String(value).length === length ? undefined : \"Text should be \".concat(length, \" characters long\");\n};\nexport var isNumber = function isNumber(value) {\n  return String(value).match(/^-{0,1}\\d+$/) ? undefined : 'Text should be a valid number';\n};\nexport var isAlphanumeric = function isAlphanumeric(value) {\n  return String(value).match(/^\\w+$/) ? undefined : 'Text should be alphanumeric';\n};\nexport var isAlphabetsOnly = function isAlphabetsOnly(value) {\n  return String(value).match(/^[A-Z]+$/i) ? undefined : 'Text should be alphabets only';\n};","map":{"version":3,"sources":["/Users/shafiashahid/myapp/src/config/form-validation.js"],"names":["_hasMinLength","value","minLength","String","length","undefined","_hasMaxLength","maxLength","_hasLength","isNumber","match","isAlphanumeric","isAlphabetsOnly"],"mappings":"AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,SAAR;AAAA,SAAuBC,MAAM,CAACF,KAAD,CAAN,CAAcG,MAAd,IAAwBF,SAAxB,GAAoCG,SAApC,qCAA2EH,SAA3E,qBAAvB;AAAA,CAAtB;AAEP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACL,KAAD,EAAQM,SAAR;AAAA,SAAuBJ,MAAM,CAACF,KAAD,CAAN,CAAcG,MAAd,IAAwBG,SAAxB,GAAoCF,SAApC,oCAA0EE,SAA1E,qBAAvB;AAAA,CAAtB;AAEP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACP,KAAD,EAAQG,MAAR;AAAA,SAAoBD,MAAM,CAACF,KAAD,CAAN,CAAcG,MAAd,KAAyBA,MAAzB,GAAkCC,SAAlC,4BAAgED,MAAhE,qBAApB;AAAA,CAAnB;AAEP,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACR,KAAD;AAAA,SAAYE,MAAM,CAACF,KAAD,CAAN,CAAcS,KAAd,CAAoB,aAApB,IAAsCL,SAAtC,GAAkD,+BAA9D;AAAA,CAAjB;AAEP,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACV,KAAD;AAAA,SAAYE,MAAM,CAACF,KAAD,CAAN,CAAcS,KAAd,CAAoB,OAApB,IAAgCL,SAAhC,GAA4C,6BAAxD;AAAA,CAAvB;AAEP,OAAO,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACX,KAAD;AAAA,SAAYE,MAAM,CAACF,KAAD,CAAN,CAAcS,KAAd,CAAoB,WAApB,IAAoCL,SAApC,GAAgD,+BAA5D;AAAA,CAAxB","sourcesContent":["export const _hasMinLength = (value, minLength) => (String(value).length >= minLength ? undefined : `Text should be at least ${minLength} characters long`);\n\nexport const _hasMaxLength = (value, maxLength) => (String(value).length <= maxLength ? undefined : `Text should be at most ${maxLength} characters long`);\n\nexport const _hasLength = (value, length) => (String(value).length === length ? undefined : `Text should be ${length} characters long`);\n\nexport const isNumber = (value) => (String(value).match(/^-{0,1}\\d+$/) ?  undefined : 'Text should be a valid number');\n\nexport const isAlphanumeric = (value) => (String(value).match(/^\\w+$/) ?  undefined : 'Text should be alphanumeric');\n\nexport const isAlphabetsOnly = (value) => (String(value).match(/^[A-Z]+$/i) ?  undefined : 'Text should be alphabets only');"]},"metadata":{},"sourceType":"module"}